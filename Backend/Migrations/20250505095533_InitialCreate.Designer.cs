// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    [Migration("20250505095533_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.Ban", b =>
                {
                    b.Property<int>("MaBan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaBan"));

                    b.Property<int>("SucChua")
                        .HasColumnType("integer");

                    b.Property<string>("TenBan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("boolean");

                    b.HasKey("MaBan");

                    b.ToTable("Ban");
                });

            modelBuilder.Entity("Backend.Models.BoPhan", b =>
                {
                    b.Property<int>("MaBoPhan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaBoPhan"));

                    b.Property<string>("TenBoPhan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("MaBoPhan");

                    b.ToTable("BoPhan");
                });

            modelBuilder.Entity("Backend.Models.CaLamViec", b =>
                {
                    b.Property<int>("MaCa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaCa"));

                    b.Property<TimeSpan>("GioBatDau")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("GioKetThuc")
                        .HasColumnType("interval");

                    b.Property<int>("MaNhanVien")
                        .HasColumnType("integer");

                    b.HasKey("MaCa");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("CaLamViec");
                });

            modelBuilder.Entity("Backend.Models.ChamCong", b =>
                {
                    b.Property<int>("MaChamCong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaChamCong"));

                    b.Property<TimeSpan>("GioRa")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("GioVao")
                        .HasColumnType("interval");

                    b.Property<int>("MaNhanVien")
                        .HasColumnType("integer");

                    b.Property<DateTime>("NgayChamCong")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MaChamCong");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("ChamCong");
                });

            modelBuilder.Entity("Backend.Models.ChiTietDonHang", b =>
                {
                    b.Property<int>("MaChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaChiTiet"));

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaDonHang")
                        .HasColumnType("integer");

                    b.Property<int>("MaMon")
                        .HasColumnType("integer");

                    b.Property<int>("SoLuong")
                        .HasColumnType("integer");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaChiTiet");

                    b.HasIndex("MaDonHang");

                    b.HasIndex("MaMon");

                    b.ToTable("ChiTietDonHang");
                });

            modelBuilder.Entity("Backend.Models.DatBan", b =>
                {
                    b.Property<int>("MaDatBan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaDatBan"));

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaBan")
                        .HasColumnType("integer");

                    b.Property<int>("MaKH")
                        .HasColumnType("integer");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("MaDatBan");

                    b.HasIndex("MaBan");

                    b.HasIndex("MaKH");

                    b.ToTable("DatBan");
                });

            modelBuilder.Entity("Backend.Models.DonHang", b =>
                {
                    b.Property<int>("MaDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaDonHang"));

                    b.Property<int>("KhachHangID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MaDonHang");

                    b.HasIndex("KhachHangID");

                    b.ToTable("DonHang");
                });

            modelBuilder.Entity("Backend.Models.GiaoDichKho", b =>
                {
                    b.Property<int>("MaGiaoDich")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaGiaoDich"));

                    b.Property<string>("Loai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("MaDonHang")
                        .HasColumnType("integer");

                    b.Property<int>("MaNguyenLieu")
                        .HasColumnType("integer");

                    b.Property<DateTime>("NgayGio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("SoLuong")
                        .HasColumnType("numeric");

                    b.HasKey("MaGiaoDich");

                    b.HasIndex("MaDonHang");

                    b.HasIndex("MaNguyenLieu");

                    b.ToTable("GiaoDichKho");
                });

            modelBuilder.Entity("Backend.Models.KhachHang", b =>
                {
                    b.Property<int>("MaKhachHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaKhachHang"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MaKhachHang");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("Backend.Models.Kho", b =>
                {
                    b.Property<int>("MaNguyenLieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaNguyenLieu"));

                    b.Property<string>("DanhMuc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("DonVi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("SoLuongHienTai")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SoLuongToiThieu")
                        .HasColumnType("numeric");

                    b.Property<string>("TenNguyenLieu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("MaNguyenLieu");

                    b.ToTable("Kho");
                });

            modelBuilder.Entity("Backend.Models.KhuyenMai", b =>
                {
                    b.Property<int>("MaKM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaKM"));

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("PhanTramGiam")
                        .HasColumnType("numeric");

                    b.Property<string>("TenKM")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("MaKM");

                    b.ToTable("KhuyenMai");
                });

            modelBuilder.Entity("Backend.Models.KhuyenMai_DonHang", b =>
                {
                    b.Property<int>("MaDonHang")
                        .HasColumnType("integer");

                    b.Property<int>("MaKhuyenMai")
                        .HasColumnType("integer");

                    b.Property<decimal>("SoTienGiam")
                        .HasColumnType("numeric");

                    b.HasKey("MaDonHang", "MaKhuyenMai");

                    b.HasIndex("MaKhuyenMai");

                    b.ToTable("KhuyenMai_DonHang");
                });

            modelBuilder.Entity("Backend.Models.LichLamViec", b =>
                {
                    b.Property<int>("MaLichLamViec")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaLichLamViec"));

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaCa")
                        .HasColumnType("integer");

                    b.Property<int>("MaNhanVien")
                        .HasColumnType("integer");

                    b.Property<DateTime>("NgayLamViec")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("MaLichLamViec");

                    b.HasIndex("MaCa");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("LichLamViec");
                });

            modelBuilder.Entity("Backend.Models.NhanVien", b =>
                {
                    b.Property<int>("MaNV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaNV"));

                    b.Property<string>("ChucVu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("MaNV");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("Backend.Models.ThucDon", b =>
                {
                    b.Property<int>("MaMon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaMon"));

                    b.Property<decimal>("Gia")
                        .HasColumnType("numeric");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LoaiMon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TenMon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("integer");

                    b.HasKey("MaMon");

                    b.ToTable("ThucDon");
                });

            modelBuilder.Entity("Backend.Models.VaiTro", b =>
                {
                    b.Property<int>("MaVaiTro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaVaiTro"));

                    b.Property<string>("TenVaiTro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MaVaiTro");

                    b.ToTable("VaiTro");
                });

            modelBuilder.Entity("Backend.Models.CaLamViec", b =>
                {
                    b.HasOne("Backend.Models.NhanVien", "NhanVien")
                        .WithMany("CaLamViec")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Backend.Models.ChamCong", b =>
                {
                    b.HasOne("Backend.Models.NhanVien", "NhanVien")
                        .WithMany("ChamCong")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Backend.Models.ChiTietDonHang", b =>
                {
                    b.HasOne("Backend.Models.DonHang", "DonHang")
                        .WithMany("ChiTietDonHang")
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.ThucDon", "ThucDon")
                        .WithMany()
                        .HasForeignKey("MaMon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("ThucDon");
                });

            modelBuilder.Entity("Backend.Models.DatBan", b =>
                {
                    b.HasOne("Backend.Models.Ban", "Ban")
                        .WithMany("DatBan")
                        .HasForeignKey("MaBan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("MaKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ban");

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("Backend.Models.DonHang", b =>
                {
                    b.HasOne("Backend.Models.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("KhachHangID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("Backend.Models.GiaoDichKho", b =>
                {
                    b.HasOne("Backend.Models.DonHang", "DonHang")
                        .WithMany()
                        .HasForeignKey("MaDonHang");

                    b.HasOne("Backend.Models.Kho", "Kho")
                        .WithMany()
                        .HasForeignKey("MaNguyenLieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("Kho");
                });

            modelBuilder.Entity("Backend.Models.KhuyenMai_DonHang", b =>
                {
                    b.HasOne("Backend.Models.DonHang", "DonHang")
                        .WithMany()
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.KhuyenMai", "KhuyenMai")
                        .WithMany()
                        .HasForeignKey("MaKhuyenMai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("KhuyenMai");
                });

            modelBuilder.Entity("Backend.Models.LichLamViec", b =>
                {
                    b.HasOne("Backend.Models.CaLamViec", "CaLamViec")
                        .WithMany()
                        .HasForeignKey("MaCa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaLamViec");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Backend.Models.Ban", b =>
                {
                    b.Navigation("DatBan");
                });

            modelBuilder.Entity("Backend.Models.DonHang", b =>
                {
                    b.Navigation("ChiTietDonHang");
                });

            modelBuilder.Entity("Backend.Models.NhanVien", b =>
                {
                    b.Navigation("CaLamViec");

                    b.Navigation("ChamCong");
                });
#pragma warning restore 612, 618
        }
    }
}
